# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Pipeline for Leave Management System - User Service

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ develop,master ]

jobs:
  build:
 
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests=true --file pom.xml
    - name: Build with Maven
      run: mvn clean package
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
         username: 'arjunkshenoy'
         password: '1MyDockerPassword'
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
       context: .
       push: ${{ GitHub.event_name != 'pull_request' &&  github.ref == 'refs/heads/develop' }}
       labels: ${{ steps.meta.outputs.labels }}
       tags: |
           arjunkshenoy/lms-user-service:latest 
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=arjunshenoy_lms-user-service
      
      
      
      
